services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pool-manager-prod
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      APP_ENV: prod
      APP_DEBUG: 0
      DATABASE_URL: mysql://app:app@db:3306/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pool-manager-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: mysql:8.0
    container_name: pool-manager-db-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: app
      MYSQL_USER: app
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-app}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - pool-manager-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

volumes:
  dbdata:
    driver: local

networks:
  pool-manager-network:
    driver: bridge
