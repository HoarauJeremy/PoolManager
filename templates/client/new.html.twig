{% extends 'base.html.twig' %}

{% block title %}Ajouter un client{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {# Utilisation de Tailwind via CDN - meilleure pratique est de l'installer localement #}
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
{% endblock %}

{% block body %}
    {# Conteneur principal avec style responsive et accessibilité #}
    <div class="mx-auto mt-10 max-w-md rounded-2xl bg-blue-300 p-8 shadow-lg"
         role="form"
         aria-label="Formulaire d'ajout de client">
        {# Titre du formulaire avec classe responsive #}
        <h1 class="mb-7 text-center text-2xl font-bold text-gray-800">Ajouter un client</h1>

        {# Début du formulaire avec classe pour accessibilité #}
        {{ form_start(form, {'attr': {'class': 'space-y-4'}}) }}

            {# Champ Nom - structure optimisée avec gestion d'erreur #}
            <div class="space-y-1">
                {{ form_label(form.nom, null, {
                    'label_attr': {
                        'class': 'block text-sm font-medium text-gray-700',
                        'for': 'client_nom'
                    }
                }) }}
                {{ form_widget(form.nom, {
                    'attr': {
                        'class': 'w-full rounded-lg border border-gray-300 bg-white px-3.5 py-3 text-base shadow-sm outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent',
                        'id': 'client_nom',
                        'aria-describedby': 'client_nom_error'
                    }
                }) }}
                <div class="text-sm text-red-600" id="client_nom_error">
                    {{ form_errors(form.nom) }}
                </div>
            </div>

            {# Champ Prénom - même structure que Nom pour cohérence #}
            <div class="space-y-1">
                {{ form_label(form.prenom, null, {
                    'label_attr': {
                        'class': 'block text-sm font-medium text-gray-700',
                        'for': 'client_prenom'
                    }
                }) }}
                {{ form_widget(form.prenom, {
                    'attr': {
                        'class': 'w-full rounded-lg border border-gray-300 bg-white px-3.5 py-3 text-base shadow-sm outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent',
                        'id': 'client_prenom',
                        'aria-describedby': 'client_prenom_error'
                    }
                }) }}
                <div class="text-sm text-red-600" id="client_prenom_error">
                    {{ form_errors(form.prenom) }}
                </div>
            </div>

            {# Champ Email avec type email pour validation native #}
            <div class="space-y-1">
                {{ form_label(form.email, null, {
                    'label_attr': {
                        'class': 'block text-sm font-medium text-gray-700',
                        'for': 'client_email'
                    }
                }) }}
                {{ form_widget(form.email, {
                    'attr': {
                        'class': 'w-full rounded-lg border border-gray-300 bg-white px-3.5 py-3 text-base shadow-sm outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent',
                        'id': 'client_email',
                        'type': 'email',
                        'aria-describedby': 'client_email_error',
                        'autocomplete': 'email'
                    }
                }) }}
                <div class="text-sm text-red-600" id="client_email_error">
                    {{ form_errors(form.email) }}
                </div>
            </div>

            {# Champ Adresse avec autocomplete #}
            <div class="space-y-1">
                {{ form_label(form.adresse, null, {
                    'label_attr': {
                        'class': 'block text-sm font-medium text-gray-700',
                        'for': 'client_adresse'
                    }
                }) }}
                {{ form_widget(form.adresse, {
                    'attr': {
                        'class': 'w-full rounded-lg border border-gray-300 bg-white px-3.5 py-3 text-base shadow-sm outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent',
                        'id': 'client_adresse',
                        'aria-describedby': 'client_adresse_error',
                        'autocomplete': 'street-address'
                    }
                }) }}
                <div class="text-sm text-red-600" id="client_adresse_error">
                    {{ form_errors(form.adresse) }}
                </div>
            </div>

            {# Champ Ville avec autocomplete #}
            <div class="space-y-1">
                {{ form_label(form.ville, null, {
                    'label_attr': {
                        'class': 'block text-sm font-medium text-gray-700',
                        'for': 'client_ville'
                    }
                }) }}
                {{ form_widget(form.ville, {
                    'attr': {
                        'class': 'w-full rounded-lg border border-gray-300 bg-white px-3.5 py-3 text-base shadow-sm outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent',
                        'id': 'client_ville',
                        'aria-describedby': 'client_ville_error',
                        'autocomplete': 'address-level2'
                    }
                }) }}
                <div class="text-sm text-red-600" id="client_ville_error">
                    {{ form_errors(form.ville) }}
                </div>
            </div>

            {# Champ Code Postal avec input type approprié #}
            <div class="space-y-1">
                {{ form_label(form.code_postal, null, {
                    'label_attr': {
                        'class': 'block text-sm font-medium text-gray-700',
                        'for': 'client_code_postal'
                    }
                }) }}
                {{ form_widget(form.code_postal, {
                    'attr': {
                        'class': 'w-full rounded-lg border border-gray-300 bg-white px-3.5 py-3 text-base shadow-sm outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent',
                        'id': 'client_code_postal',
                        'aria-describedby': 'client_code_postal_error',
                        'autocomplete': 'postal-code',
                        'pattern': '[0-9]{5}'
                    }
                }) }}
                <div class="text-sm text-red-600" id="client_code_postal_error">
                    {{ form_errors(form.code_postal) }}
                </div>
            </div>

            {# Champ Téléphone Fixe avec input type tel #}
            <div class="space-y-1">
                {{ form_label(form.tel_fixe, null, {
                    'label_attr': {
                        'class': 'block text-sm font-medium text-gray-700',
                        'for': 'client_tel_fixe'
                    }
                }) }}
                {{ form_widget(form.tel_fixe, {
                    'attr': {
                        'class': 'w-full rounded-lg border border-gray-300 bg-white px-3.5 py-3 text-base shadow-sm outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent',
                        'id': 'client_tel_fixe',
                        'type': 'tel',
                        'aria-describedby': 'client_tel_fixe_error',
                        'autocomplete': 'tel'
                    }
                }) }}
                <div class="text-sm text-red-600" id="client_tel_fixe_error">
                    {{ form_errors(form.tel_fixe) }}
                </div>
            </div>

            {# Champ Téléphone GSM avec input type tel #}
            <div class="space-y-1">
                {{ form_label(form.tel_gsm, null, {
                    'label_attr': {
                        'class': 'block text-sm font-medium text-gray-700',
                        'for': 'client_tel_gsm'
                    }
                }) }}
                {{ form_widget(form.tel_gsm, {
                    'attr': {
                        'class': 'w-full rounded-lg border border-gray-300 bg-white px-3.5 py-3 text-base shadow-sm outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent',
                        'id': 'client_tel_gsm',
                        'type': 'tel',
                        'aria-describedby': 'client_tel_gsm_error',
                        'autocomplete': 'tel'
                    }
                }) }}
                <div class="text-sm text-red-600" id="client_tel_gsm_error">
                    {{ form_errors(form.tel_gsm) }}
                </div>
            </div>

            {# Bouton de soumission avec states #}
            <button type="submit"
                    class="mt-5 w-full rounded-lg bg-blue-500 px-4 py-3 text-base font-bold text-white shadow transition-colors duration-200 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 active:bg-blue-800">
                Ajouter
            </button>

        {{ form_end(form) }}

        {# Lien de retour avec style cohérent #}
        <a href="{{ path('app_client_index') }}"
           class="mt-4 block text-center text-sm text-blue-500 hover:text-blue-700 hover:underline focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
           aria-label="Retour à la liste des clients">
            ⟵ Retour à la liste
        </a>
    </div>
{% endblock %}