security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User: 'auto'
    
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                username_parameter: email
                password_parameter: password
                post_only: true
                use_forward: false
                use_referer: false
                default_target_path: app_dashboard
            logout:
                path: app_logout
                # target: app_home
                target: app_login
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path: /

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # Routes accessibles à tous, même non connectés
        - { path: ^/$, roles: PUBLIC_ACCESS }
        - { path: ^/login$, roles: PUBLIC_ACCESS }
        - { path: ^/register, roles: ROLE_ADMIN }
        - { path: ^/resetting, roles: PUBLIC_ACCESS }
        - { path: ^/healthz, roles: PUBLIC_ACCESS }
        
        # La route de déconnexion doit être accessible à tous les utilisateurs connectés
        - { path: ^/logout, roles: IS_AUTHENTICATED_FULLY }
        
        # Section admin réservée aux administrateurs
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/intervention/new, roles: ROLE_ADMIN }
        - { path: ^/intervention/\d+/edit, roles: ROLE_ADMIN }
        - { path: ^/type/intervention/new, roles: ROLE_ADMIN }
        - { path: ^/type/intervention/\d+/edit, roles: ROLE_ADMIN }
        - { path: ^/client/new, roles: ROLE_ADMIN }
        - { path: ^/client/\d+/edit, roles: ROLE_ADMIN }

        # Routes nécessitant une authentification
        - { path: ^/type/intervention, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/client, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/intervention, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/materiel, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/dashboard, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/calendrier, roles: IS_AUTHENTICATED_FULLY}
        
        # Toutes les autres routes nécessitent d'être connecté
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }



when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon